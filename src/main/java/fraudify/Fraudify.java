/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package fraudify;

import fraudify.models.PaymentInfo;
import fraudify.providers.FraudService;
import fraudify.providers.InternalFraudchecker;

import java.util.Map;

import static fraudify.models.PaymentInfo.*;

/**
 * Fraudify will review any order if provided with a valid order type, and use the desired fraud checker
 */
public class Fraudify {
    /** Dependencies */
    private final FraudService service;

    /**
     * Defaults to the internal fraud checker
     */
    public Fraudify() {
        this.service = new InternalFraudchecker();
    }

    /**
     * @param service - A fraud service, can be external or internal.
     */
    public Fraudify(FraudService service) {
        this.service = service;
    }

    /**
     * Checks a payment passed as a map and returns the screening result of the order
     *
     * @param paymentInfoData - A key-value pair representation of payment info
     * @return {ScreeningResult} - the result of the screening
     */
    public ScreeningResult getScreeningResult(Map<String, String> paymentInfoData, int[] cvv, int[] number) {
        // Converts the paymentInfo data into the module models
        PaymentInfo paymentInfo = new PaymentInfoBuilder(paymentInfoData.get("ip"))
                .setAmount(paymentInfoData.get("amount"))
                .setCurrency(paymentInfoData.get("currency"))
                .setBillAddr(paymentInfoData.get("bill_addr"))
                .setBillCity(paymentInfoData.get("bill_city"))
                .setBillCountry(paymentInfoData.get("bill_country"))
                .setBillState(paymentInfoData.get("bill_state"))
                .setBillZipCode(paymentInfoData.get("bill_zip_code"))
                .setCvv(cvv)
                .setNumber(number)
                .setEmail(paymentInfoData.get("email"))
                .setFirstName(paymentInfoData.get("first_name"))
                .setLastName(paymentInfoData.get("last_name"))
                .setOrderId(paymentInfoData.get("id"))
                .setPhone(paymentInfoData.get("phone"))
                .setShipAddr(paymentInfoData.get("ship_addr"))
                .setShipCity(paymentInfoData.get("ship_city"))
                .setShipCountry(paymentInfoData.get("ship_country"))
                .setShipState(paymentInfoData.get("ship_state"))
                .setShipZipCode(paymentInfoData.get("ship_zip_code"))
                .setShipState(paymentInfoData.get("ship_state"))
                .build();

        return getScreeningResult(paymentInfo);
    }

    /**
     * Checks a payment and returns the screening result of the payment
     *
     * @param paymentInfo - An paymentInfo object to screen
     * @return {ScreeningResult} - the result of the screening
     */
    public ScreeningResult getScreeningResult(PaymentInfo paymentInfo) {
        return service.validatePayment(paymentInfo);
    }
}
